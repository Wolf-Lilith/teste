import telebot
import requests
import os
import uuid
import subprocess
import json

WIT_AI_TOKEN = 'IBFEUM3ZB6Q7OQCGJJW3AGCOVBH7HTAH'
TELEGRAM_TOKEN = '7559992319:AAE3WjlzC9yvWOSeWgKUu6sqhTfU-6IDEuE'
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# Fun√ß√£o para processar a resposta do Wit.ai
def process_wit_response(raw_response):
    responses = raw_response.strip().split('\n')
    transcribed_text = None

    for r in responses:
        try:
            # Tenta processar cada linha como JSON
            data = json.loads(r)
            print("üîç JSON processado com sucesso:", data)

            # Verifica se o campo "text" existe e se √© a resposta final
            if "text" in data:
                transcribed_text = data["text"]
                if data.get("is_final", False):
                    break  # Se encontrar uma resposta final v√°lida, sai do loop
        except json.JSONDecodeError as e:
            print(f"‚ö†Ô∏è Erro ao processar JSON: {e}. Tentando novamente com pr√≥xima resposta.")
            # Aqui podemos retornar uma mensagem mais espec√≠fica ou continuar com o pr√≥ximo
            continue
        except Exception as e:
            print(f"‚ö†Ô∏è Erro inesperado: {e}. Tentando novamente com pr√≥xima resposta.")
            continue
    # Se encontrou uma transcri√ß√£o v√°lida, retorna
    if transcribed_text:
        return transcribed_text

    # Caso contr√°rio, retorna None ou uma mensagem de erro
    return "üòï N√£o consegui entender o que foi dito, tente novamente."

# Fun√ß√£o para enviar o √°udio para o Wit.ai e obter a transcri√ß√£o
def send_to_wit(wav_file):
    headers = {
        'Authorization': f'Bearer {WIT_AI_TOKEN}',
        'Content-Type': 'audio/wav'
    }
    with open(wav_file, 'rb') as f:
        response = requests.post('https://api.wit.ai/speech?v=20250514', headers=headers, data=f)

    # Tratar falha de conex√£o ou outros erros de rede
    if response.status_code != 200:
        raise Exception(f"Erro ao conectar ao Wit.ai: {response.status_code} - {response.text}")

    return response.text

# Manipulador de comando /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.reply_to(message, "Ol√°! Envie um √°udio de voz e eu vou transcrev√™-lo com IA ü§ñüéß")

# Manipulador de mensagens de voz
@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    try:
        print("üéôÔ∏è Recebeu um √°udio!")

        # Baixar o arquivo de √°udio
        file_info = bot.get_file(message.voice.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        ogg_filename = f"{uuid.uuid4()}.ogg"

        with open(ogg_filename, 'wb') as f:
            f.write(downloaded_file)

        # Converte para WAV (16kHz, mono, 16-bit PCM)
        wav_filename = ogg_filename.replace('.ogg', '.wav')
        subprocess.run(['ffmpeg', '-i', ogg_filename, '-ar', '16000', '-ac', '1', '-f', 'wav', wav_filename], check=True)

        print("‚è≥ Enviando √°udio convertido para o Wit.ai...")

        # Enviar √°udio para o Wit.ai e processar a resposta
        wit_response = send_to_wit(wav_filename)
        transcribed_text = process_wit_response(wit_response)

        # Limpar arquivos tempor√°rios
        os.remove(ogg_filename)
        os.remove(wav_filename)

        if transcribed_text:
            bot.reply_to(message, f"üìù Voc√™ disse: {transcribed_text}")
        else:
            bot.reply_to(message, "üòï N√£o entendi o que foi dito.")

    # Erro de conex√£o com o Wit.ai
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro de conex√£o com Wit.ai: {e}")
        bot.reply_to(message, "‚ùå N√£o consegui me conectar ao servi√ßo de transcri√ß√£o.")

    # Erro de convers√£o de √°udio
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao converter o √°udio: {e}")
        bot.reply_to(message, "‚ùå Ocorreu um erro ao processar o √°udio. Tente novamente.")

    # Erro geral de outros tipos
    except Exception as e:
        print("‚ùå Erro geral:", e)
        bot.reply_to(message, "‚ùå Ocorreu um erro ao processar seu √°udio. Tente novamente.")

bot.polling()
